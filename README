-*- coding: utf-8-unix -*-

		   MMCK CHICKEN compiler use examples
		   ==================================


Topics
------

  1. Introduction
  2. Look out for errors
  A. Resources


1. Introduction
---------------

This  project is  a collection  of usage  examples for  the compiler  of
CHICKEN:  a Scheme-to-C  compiler  supporting the  language features  as
defined in the "Revised^5 Report on Scheme".

  The last  time the author  bothered to  update this paragraph,  he had
tested CHICKEN version 5.0.0.

  Every  example is  in its  own  subdirectory.  All  the makefiles  are
written to  support parallelism, so  we could always compile  an example
with:

   $ make -j3 all

  The makefile rules implemented are  the traditional "all", "clean" and
"check".   The  rule  "check"  will run  the  executable  programs.   In
addition,  the rule  "clean-no-progs" will  remove all  the intermediate
files and shared  libraries, but it will leave  the executable programs:
this is  to check that,  when building standalone programs,  the program
itself is independent from anything else.


Code evaluation times
---------------------

This package adopts the following terminology:

Invoke  code: it  is the  code evaluated  at run  time in  libraries and
programs, when the compilation unit is  "invoked" at start up time.  The
toplevel forms and right-hand side  of toplevel variable definitions are
invoke code.

Visit code:  it is the  code evaluated at  expand time in  libraries and
programs, when the compilation unit is "visited" while being imported by
another unit.  The contents of BEGIN-FOR-SYNTAX forms and the right-hand
side of toplevel macro definitions are visit code.


2. Look out for errors
----------------------

Sometimes  compilation  fails  and  the  raised  errors  have  "cryptic"
description.

"Warning: the following extensions are not currently installed: NAME"
---------------------------------------------------------------------

Where NAME is the name of a module.  When this happens while compiling a
library composed  of multiple source  files, each holding  a compilation
unit and each holding a module, maybe we have a compilation unit with:

   (import NAME)

and we forgot to:

   (declare (uses NAME))


A. Resources
------------

Development takes place at:

   <http://github.com/marcomaggi/mmck-chicken-compiler-use-examples/>

the home page of the Chicken Scheme project is at:

		       <http://www.call-cc.org/>


### end of file
# Local Variables:
# mode: text
# fill-column: 72
# paragraph-start: "*"
# ispell-local-dictionary: "en_GB-ise-w_accents"
# End:
